
// 학습 콘텐츠 더미 데이터
export const categories = [
  "Computer Architecture",
  "Data Structure",
  "Operating System",
  "Database",
  "Network",
  "Software Engineering",
];

export const dummyContents = [
  {
    id: 1,
    first_category: "Computer Architecture",
    second_category: "컴퓨터 구조 개요",
    title: "컴퓨터 구조란 무엇인가?",
    body: "컴퓨터 구조는 CPU, 메모리, 입출력 장치로 구성됩니다.",
  },
  {
    id: 2,
    first_category: "Computer Architecture",
    second_category: "CPU",
    title: "CPU의 역할",
    body: "CPU는 컴퓨터의 중앙 처리 장치로서 연산과 명령어 처리를 담당합니다.",
  },
  {
    id: 3,
    first_category: "Computer Architecture",
    second_category: "메모리 구조",
    title: "캐시 메모리란?",
    body: "캐시 메모리는 CPU와 메인 메모리 간 속도 차이를 줄이기 위해 사용됩니다.",
  },
  {
    id: 4,
    first_category: "Computer Architecture",
    second_category: "버스 구조",
    title: "컴퓨터 버스란?",
    body: "버스는 컴퓨터 내부에서 데이터를 전달하는 통로입니다.",
  },
  {
    id: 5,
    first_category: "Computer Architecture",
    second_category: "I/O 시스템",
    title: "I/O 장치란?",
    body: "I/O 장치는 사용자와 컴퓨터 간의 데이터 교환을 담당하는 장치입니다.",
  },
  {
    id: 6,
    first_category: "Data Structure",
    second_category: "트리 구조",
    title: "이진 트리(Binary Tree)란?",
    body: "이진 트리는 각 노드가 최대 두 개의 자식 노드를 가지는 트리 자료구조입니다.",
  },
  {
    id: 7,
    first_category: "Data Structure",
    second_category: "그래프",
    title: "그래프(Graph)란?",
    body: "그래프는 정점(Vertex)과 간선(Edge)으로 이루어진 자료구조입니다.",
  },
  {
    id: 8,
    first_category: "Data Structure",
    second_category: "해시 테이블",
    title: "해시 테이블이란?",
    body: "해시 테이블은 키-값 쌍을 저장하는 자료구조로, 빠른 검색이 가능합니다.",
  },
  {
    id: 9,
    first_category: "Data Structure",
    second_category: "스택 & 큐",
    title: "스택과 큐의 차이점",
    body: "스택은 LIFO, 큐는 FIFO 방식으로 데이터를 관리합니다.",
  },
  {
    id: 10,
    first_category: "Data Structure",
    second_category: "정렬 알고리즘",
    title: "퀵 정렬(Quick Sort)이란?",
    body: "퀵 정렬은 피벗을 기준으로 작은 값과 큰 값을 나누어 정렬하는 알고리즘입니다.",
  },
  {
    id: 11,
    first_category: "Operating System",
    second_category: "운영체제 개요",
    title: "운영 체제란?",
    body: "운영 체제(OS)는 하드웨어와 소프트웨어를 관리하는 시스템 소프트웨어입니다.",
  },
  {
    id: 12,
    first_category: "Operating System",
    second_category: "프로세스 관리",
    title: "프로세스와 스레드 차이",
    body: "프로세스는 독립적인 실행 단위이며, 스레드는 프로세스 내 실행 단위입니다.",
  },
  {
    id: 13,
    first_category: "Operating System",
    second_category: "메모리 관리",
    title: "가상 메모리란?",
    body: "가상 메모리는 물리 메모리보다 더 큰 메모리 공간을 제공하는 기술입니다.",
  },
  {
    id: 14,
    first_category: "Operating System",
    second_category: "파일 시스템",
    title: "파일 시스템이란?",
    body: "파일 시스템은 데이터를 저장하고 관리하는 시스템입니다.",
  },
  {
    id: 15,
    first_category: "Operating System",
    second_category: "인터럽트",
    title: "인터럽트란?",
    body: "인터럽트는 CPU가 현재 실행 중인 작업을 중단하고 특정 요청을 처리하는 기능입니다.",
  },
  {
    id: 16,
    first_category: "Database",
    second_category: "DBMS",
    title: "DBMS란?",
    body: "DBMS는 데이터베이스를 관리하는 시스템 소프트웨어입니다.",
  },
  {
    id: 17,
    first_category: "Database",
    second_category: "트랜잭션",
    title: "트랜잭션과 ACID 원칙",
    body: "트랜잭션은 데이터베이스의 상태를 변경하는 논리적인 작업 단위입니다.",
  },
  {
    id: 18,
    first_category: "Database",
    second_category: "정규화",
    title: "데이터 정규화란?",
    body: "정규화는 데이터 중복을 최소화하고 일관성을 유지하는 데이터베이스 설계 기법입니다.",
  },
  {
    id: 19,
    first_category: "Database",
    second_category: "SQL",
    title: "SQL과 NoSQL 차이점",
    body: "SQL은 관계형 데이터베이스, NoSQL은 비정형 데이터를 위한 데이터베이스입니다.",
  },
  {
    id: 20,
    first_category: "Database",
    second_category: "인덱스",
    title: "데이터베이스 인덱스란?",
    body: "인덱스는 데이터 검색 속도를 향상시키기 위한 자료구조입니다.",
  },
  {
    id: 21,
    first_category: "Network",
    second_category: "TCP/IP",
    title: "TCP와 UDP 차이점",
    body: "TCP는 연결형 프로토콜이며, UDP는 비연결형 프로토콜입니다.",
  },
  {
    id: 22,
    first_category: "Network",
    second_category: "OSI 7 Layer",
    title: "OSI 7계층이란?",
    body: "OSI 7계층 모델은 네트워크 통신을 7개의 계층으로 나눈 모델입니다.",
  },
  {
    id: 23,
    first_category: "Network",
    second_category: "HTTP",
    title: "HTTP와 HTTPS 차이",
    body: "HTTPS는 SSL/TLS 암호화를 적용한 보안 HTTP 프로토콜입니다.",
  },
  {
    id: 24,
    first_category: "Network",
    second_category: "DNS",
    title: "DNS란?",
    body: "DNS는 도메인 네임을 IP 주소로 변환하는 시스템입니다.",
  },
  {
    id: 25,
    first_category: "Network",
    second_category: "IP",
    title: "IPv4와 IPv6 차이점",
    body: "IPv4는 32비트 주소 체계, IPv6는 128비트 주소 체계를 사용합니다.",
  },
  {
    id: 26,
    first_category: "Software Engineering",
    second_category: "애자일 개발",
    title: "애자일 개발 방법론",
    body: "애자일 개발은 빠른 피드백을 기반으로 한 반복적 개발 방법론입니다.",
  },
  {
    id: 27,
    first_category: "Software Engineering",
    second_category: "테스트 주도 개발",
    title: "TDD란?",
    body: "TDD는 테스트를 먼저 작성하고, 그 테스트를 통과하는 코드를 작성하는 개발 기법입니다.",
    },
  {
    id: 28,
    first_category: "Software Engineering",
    second_category: "디자인 패턴",
    title: "싱글톤 패턴이란?",
    body: "싱글톤 패턴은 하나의 인스턴스만 생성하여 전역적으로 공유하는 디자인 패턴입니다.",
  },
  {
    id: 29,
    first_category: "Software Engineering",
    second_category: "객체지향 설계",
    title: "SOLID 원칙이란?",
    body: "SOLID 원칙은 객체지향 프로그래밍에서 유지보수성과 확장성을 높이기 위한 5가지 설계 원칙입니다.",
  },
  {
    id: 30,
    first_category: "Software Engineering",
    second_category: "소프트웨어 개발 생명주기",
    title: "SDLC란?",
    body: "SDLC(Software Development Life Cycle)는 소프트웨어 개발의 계획부터 유지보수까지의 전 과정입니다.",
  },
];

// 면접 질문 더미 데이터
export const interviewCategories = [
    "Database",
    "Network",
    "OperatingSystem",
    "Spring"
];

export const dummyInterviewQuestions = [
  {
    id: 1,
    category: "Database",
    keyword: "SQL",
    question: "SQL과 NoSQL의 차이는 무엇인가요?",
    answer: "SQL은 관계형 데이터베이스(RDBMS)를 사용하고, NoSQL은 비정형 데이터를 처리하는 데 최적화되어 있습니다.",
  },
  {
    id: 2,
    category: "Database",
    keyword: "정규화",
    question: "데이터베이스 정규화(Normalization)란?",
    answer: "데이터 중복을 줄이고 무결성을 유지하기 위해 데이터베이스를 구조화하는 과정입니다.",
  },
  {
    id: 3,
    category: "Database",
    keyword: "트랜잭션",
    question: "트랜잭션(Transaction)이란?",
    answer: "트랜잭션은 데이터베이스의 상태를 변경하는 하나의 논리적인 작업 단위입니다.",
  },
  {
    id: 4,
    category: "Database",
    keyword: "ACID",
    question: "트랜잭션의 ACID 특성이란?",
    answer: "원자성(Atomicity), 일관성(Consistency), 독립성(Isolation), 지속성(Durability)의 4가지 속성을 의미합니다.",
  },
  {
    id: 5,
    category: "Database",
    keyword: "인덱스",
    question: "데이터베이스 인덱스(Index)의 역할은?",
    answer: "인덱스는 검색 속도를 향상시키기 위해 사용되며, 특정 컬럼의 값을 기반으로 정렬된 데이터 구조를 유지합니다.",
  },
  {
    id: 6,
    category: "Network",
    keyword: "TCP/IP",
    question: "TCP와 UDP의 차이는 무엇인가요?",
    answer: "TCP는 연결 지향적이며 신뢰성이 높은 프로토콜이고, UDP는 비연결형이며 속도가 빠르지만 신뢰성이 낮습니다.",
  },
  {
    id: 7,
    category: "Network",
    keyword: "HTTP",
    question: "HTTP와 HTTPS의 차이는?",
    answer: "HTTPS는 HTTP에 SSL/TLS 암호화가 적용된 프로토콜로, 보안이 강화된 형태입니다.",
  },
  {
    id: 8,
    category: "Network",
    keyword: "OSI 7 Layer",
    question: "OSI 7계층이란?",
    answer: "네트워크 통신을 7개 계층으로 나눈 개념으로, 각각 물리 계층부터 응용 계층까지 포함됩니다.",
  },
  {
    id: 9,
    category: "Network",
    keyword: "DNS",
    question: "DNS(Domain Name System)의 역할은?",
    answer: "DNS는 도메인 네임을 IP 주소로 변환하는 역할을 합니다.",
  },
  {
    id: 10,
    category: "Network",
    keyword: "IP",
    question: "IPv4와 IPv6의 차이는?",
    answer: "IPv4는 32비트 주소 체계를 사용하고, IPv6는 128비트 주소 체계를 사용하여 더 많은 주소 공간을 제공합니다.",
  },
  {
    id: 11,
    category: "OperatingSystem",
    keyword: "프로세스",
    question: "프로세스와 스레드의 차이는 무엇인가요?",
    answer: "프로세스는 독립적인 실행 단위이며, 스레드는 하나의 프로세스 내에서 실행되는 실행 흐름입니다.",
  },
  {
    id: 12,
    category: "OperatingSystem",
    keyword: "멀티태스킹",
    question: "멀티태스킹(Multitasking)이란?",
    answer: "멀티태스킹은 여러 프로세스를 동시에 실행할 수 있도록 운영체제가 관리하는 기능입니다.",
  },
  {
    id: 13,
    category: "OperatingSystem",
    keyword: "인터럽트",
    question: "인터럽트란 무엇인가요?",
    answer: "인터럽트는 CPU가 현재 수행 중인 작업을 중단하고 특정 이벤트를 처리하는 메커니즘입니다.",
  },
  {
    id: 14,
    category: "OperatingSystem",
    keyword: "가상 메모리",
    question: "가상 메모리(Virtual Memory)의 개념은?",
    answer: "가상 메모리는 물리적 메모리보다 더 큰 메모리를 사용할 수 있도록 지원하는 기술입니다.",
  },
  {
    id: 15,
    category: "OperatingSystem",
    keyword: "시스템콜",
    question: "시스템 콜(System Call)이란?",
    answer: "운영체제가 응용 프로그램이 하드웨어를 직접 제어할 수 있도록 하는 인터페이스입니다.",
  },
  {
    id: 16,
    category: "Spring",
    keyword: "DI",
    question: "Spring의 DI(Dependency Injection)란?",
    answer: "DI는 의존성 주입을 의미하며, 객체 간의 의존 관계를 코드가 아닌 설정을 통해 주입하는 방식입니다.",
  },
  {
    id: 17,
    category: "Spring",
    keyword: "AOP",
    question: "Spring AOP(Aspect-Oriented Programming)이란?",
    answer: "AOP는 핵심 비즈니스 로직과 부가적인 기능(로깅, 트랜잭션 등)을 분리하여 관리하는 프로그래밍 패러다임입니다.",
  },
  {
    id: 18,
    category: "Spring",
    keyword: "Bean",
    question: "Spring Bean이란?",
    answer: "Spring 컨테이너에서 관리되는 객체로, XML 또는 Java 설정을 통해 생성 및 관리됩니다.",
  },
  {
    id: 19,
    category: "Spring",
    keyword: "JPA",
    question: "Spring에서 JPA란?",
    answer: "JPA(Java Persistence API)는 ORM(Object-Relational Mapping)을 지원하는 Java 표준 인터페이스입니다.",
  },
  {
    id: 20,
    category: "Spring",
    keyword: "트랜잭션",
    question: "Spring에서 트랜잭션을 관리하는 방법은?",
    answer: "`@Transactional` 애노테이션을 사용하여 트랜잭션 범위를 설정할 수 있습니다.",
  },
  {
    id: 21,
    category: "Spring",
    keyword: "MVC",
    question: "Spring MVC의 구조는?",
    answer: "Spring MVC는 Model, View, Controller의 역할을 분리하여 웹 애플리케이션을 설계하는 패턴입니다.",
  },
  {
    id: 22,
    category: "Spring",
    keyword: "REST API",
    question: "Spring에서 RESTful API를 구현하는 방법은?",
    answer: "`@RestController`와 `@RequestMapping`을 사용하여 RESTful API를 구현할 수 있습니다.",
  },
  {
    id: 23,
    category: "Spring",
    keyword: "스프링 부트",
    question: "Spring Boot란?",
    answer: "Spring Boot는 최소한의 설정으로 Spring 애플리케이션을 쉽게 개발할 수 있도록 도와주는 프레임워크입니다.",
  },
  {
    id: 24,
    category: "Spring",
    keyword: "Properties 설정",
    question: "Spring Boot에서 properties 설정 방법은?",
    answer: "application.properties 또는 application.yml 파일을 통해 설정을 관리할 수 있습니다.",
  },
  {
    id: 25,
    category: "Spring",
    keyword: "Swagger",
    question: "Spring Boot에서 Swagger란?",
    answer: "Swagger는 API 문서를 자동으로 생성하는 도구로, REST API의 명세를 관리하는 데 사용됩니다.",
    },
  {
    id: 26,
    category: "Spring",
    keyword: "Swagger",
    question: "Spring Boot에서 Swagger란2?",
    answer: "Swagger는 API 문서를 자동으로 생성하는 도구로, REST API의 명세를 관리하는 데 사용됩니다.2",
    },
  
];